[{"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\index.js":"1","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\App.js":"2","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\reportWebVitals.js":"3","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\ChuckInput.js":"4","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\UserContext.js":"5","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\CatHide.js":"6"},{"size":517,"mtime":1611821834053,"results":"7","hashOfConfig":"8"},{"size":4700,"mtime":1612007365252,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611821834055,"results":"10","hashOfConfig":"8"},{"size":3293,"mtime":1611943381811,"results":"11","hashOfConfig":"8"},{"size":148,"mtime":1611829615109,"results":"12","hashOfConfig":"8"},{"size":285,"mtime":1612007319266,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1esw3dr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\index.js",[],["28","29"],"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\App.js",["30"],"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\reportWebVitals.js",[],"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\ChuckInput.js",["31","32","33","34"],"import React, { useState, useEffect,useRef } from \"react\";\r\n\r\nconst CI_CATEG_URL = 'https://api.chucknorris.io/jokes/categories';\r\nconst CI_JOKEBYCAT_URL = 'https://api.chucknorris.io/jokes/search?query='\r\n\r\n\r\n\r\nexport default function RandomJoke({ more, loadMore, getFirst,errFunction,getCategory }) {\r\n  const [joke, setJoke] = useState(\"\");\r\n  const [searchbox,setSearchbox] = useState(\"\");\r\n  const [urltofetch, setUrltofetch] = useState(CI_CATEG_URL);\r\n  const componentIsMounted = useRef(true);\r\n  const [clicked,setClicked] = useState(true);\r\n  const [privaterr,setPrivaterr] = useState(false);\r\n  let jsonAnswer = 0;\r\n  const onChange = (event) => {\r\n    setSearchbox(event.target.value);\r\n    console.log(\"SEARCHBOX - Text in searchbox is:\", event.target.value);\r\n  }\r\n\r\n  const onClickSButton = () => {\r\n    let key = CI_JOKEBYCAT_URL + searchbox;\r\n    console.log(\"Search Button clicked: \", key);\r\n    setUrltofetch(key);\r\n    setClicked(true);\r\n  }\r\n\r\n  const parseAnswer = (jsondata) => {\r\n    console.log(jsondata);\r\n    if (jsondata.total === undefined){\r\n        console.log (\"UNDEFINED\");\r\n        if (jsondata[0] !== undefined){\r\n            // This is a category\r\n            getCategory(jsondata);\r\n        } // \r\n    } else {\r\n        let datalenght = jsondata.total;\r\n        \r\n        if (datalenght != 0){\r\n            console.log(jsondata.total);\r\n            // Take the first\r\n            if (jsondata !== null){\r\n                let firstquote = jsondata.result[0].value;\r\n                console.log(firstquote);\r\n                getFirst(firstquote);\r\n            } //\r\n        } else {\r\n            console.log(\"NO DATA AVAILABLE\");\r\n        }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      componentIsMounted.current = false;\r\n    };\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    async function fetchJoke() {\r\n        if (clicked === true) {\r\n            loadMore(true)\r\n            try {\r\n                let response = await fetch(urltofetch);\r\n                // const { value } = asyncResponse.data;\r\n                jsonAnswer  = await response.json();\r\n                setPrivaterr(false);\r\n                if (componentIsMounted.current) {\r\n                // setJoke(value.joke);\r\n                } // \r\n            } catch (err) {\r\n                // console.log (\"Error \");\r\n                // console.error(err);\r\n                errFunction()\r\n                setPrivaterr(true);\r\n            } finally {\r\n                console.log(\"Joke Finally fetched\");\r\n                if (privaterr === false){\r\n                    parseAnswer(jsonAnswer);\r\n                    setClicked(false);\r\n                    loadMore(false)\r\n                } //\r\n            } // end finally\r\n        } else {\r\n            console.log(\"fetchJoke called but not executed\");\r\n        }\r\n    }\r\n\r\n    fetchJoke();\r\n  }, [more, clicked]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n            type=\"search\"\r\n            id=\"search\" name=\"search\"\r\n            placeholder=\"Enter keyword here\"\r\n            value={searchbox}\r\n            onChange={onChange}\r\n        />\r\n        <button\r\n            className=\"Search-Button\"\r\n            onClick= {onClickSButton} \r\n          >\r\n            <code>CLICK TO SEARCH!</code>\r\n          </button>\r\n    </div>\r\n  );\r\n}","C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\UserContext.js",[],"C:\\Lavoro\\AggiornamentoProfessionale\\Corso_FrontEnd_Futura\\React_2021\\Test\\futura-react-test-vsv\\src\\CatHide.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":37,"nodeType":"41","messageId":"42","endLine":1,"endColumn":43},{"ruleId":"39","severity":1,"message":"43","line":9,"column":10,"nodeType":"41","messageId":"42","endLine":9,"endColumn":14},{"ruleId":"39","severity":1,"message":"44","line":9,"column":16,"nodeType":"41","messageId":"42","endLine":9,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":39,"column":24,"nodeType":"47","messageId":"48","endLine":39,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":66,"column":31,"nodeType":"51","endLine":66,"endColumn":52},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'joke' is assigned a value but never used.","'setJoke' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'jsonAnswer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","no-global-assign","no-unsafe-negation"]